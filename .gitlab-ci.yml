stages:
  - build-image
  - scrape-list
  - scrape-data

build-testing-image:
  stage: build-image
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    changes:
      - "DESCRIPTION"
      - "Dockerfile"
  when: always
  tags:
    - docker  # Run on runners for building docker
  
scrape-annual-reports-list:
  image: $CI_REGISTRY_IMAGE:latest
  stage: scrape-list
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - data-raw/
      - data/
  script:
    - ./inst/scraping_scripts/scrape_list_of_annual_reports.R
  when: always
  only:
    - schedule
  tags:
    - aegypti # Run this job on the Aegypti runner

scrape-annual-reports:
  image: $CI_REGISTRY_IMAGE:latest
  stage: scrape-data
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - data-raw/
      - data/
  script:
    - ./inst/scraping_scripts/scrape_annual_reports.R
  when: on_success
  only:
    - schedule
  tags:
    - aegypti # Run this jon on the Aegypti runner
  timeout: 72h
  dependencies: scrape-annual-reports-list
    
